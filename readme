rune.jessen1@icloud.com
is it correct now ":~/Documents/java iso/ios/xcode$ ls
Assets.xcassets  Info.plist  LaunchScreen.storyboard  Main.storyboard  ViewController.swift
"

Yes, it looks like you have created the necessary files for an iOS app. However, there may be additional files required depending on the specific needs of your app. You can continue developing your app by adding functionality to the ViewController.swift file and designing the user interface using the storyboard files.
rune.jessen1@icloud.com
code "adding functionality to the ViewController.swift file "

Sure, here's an example code snippet that adds functionality to the ViewController.swift file:

swift

import UIKit

class ViewController: UIViewController {
    
    @IBOutlet weak var label: UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        label.text = "Hello World!"
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
}

In this example, we've added an IBOutlet for a UILabel named label and set its text property to "Hello World!" in the viewDidLoad() method. This will display the "Hello World!" text on the screen when the app runs. You can modify this code to add your own functionality to the ViewController.swift file.
rune.jessen1@icloud.com
make examples*

Sure, here are a few examples of how you can add functionality to the ViewController.swift file:

Example 1: Adding a label to the view

swift

import UIKit

class ViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let label = UILabel()
        label.text = "Hello, world!"
        label.frame = CGRect(x: 0, y: 0, width: 200, height: 50)
        label.center = view.center
        label.textAlignment = .center
        
        view.addSubview(label)
    }
}

Example 2: Adding a button to the view

swift

import UIKit

class ViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let button = UIButton(type: .system)
        button.setTitle("Tap me!", for: .normal)
        button.frame = CGRect(x: 0, y: 0, width: 100, height: 50)
        button.center = view.center
        button.addTarget(self, action: #selector(buttonTapped), for: .touchUpInside)
        
        view.addSubview(button)
    }
    
    @objc func buttonTapped() {
        print("Button tapped!")
    }
}

Example 3: Changing the background color of the view

swift

import UIKit

class ViewController: UIViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        view.backgroundColor = UIColor(red: 0.5, green: 0.75, blue: 1.0, alpha: 1.0)
    }
}

These are just a few examples to get you started. There are many more ways to add functionality to your app using Swift and iOS frameworks.
rune.jessen1@icloud.com
are the 3 files connected in one

Yes, the three files ViewController.swift, Main.storyboard, and Info.plist are all related to the same view controller in your app.

The Main.storyboard file defines the layout of the user interface elements that are displayed when the view controller is shown on the screen. The ViewController.swift file contains the code that interacts with these elements, such as responding to user actions and updating the view.

The Info.plist file contains various configuration settings for your app, including its name, version number, and bundle identifier. It also specifies the initial view controller for your app, which in this case is the ViewController class defined in ViewController.swift.
rune.jessen1@icloud.com
yes

The three files can be connected through the Xcode project that they are a part of. In the project navigator in Xcode, you can see all of the files that are a part of your project. You can then create connections between the files, such as connecting a button in your storyboard to a function in your ViewController.swift file.
rune.jessen1@icloud.com
if I save the new ViewController.swift the last will be deleted from folder

If you save the new ViewController.swift file with the same name in the same location, it will overwrite the previous file with the same name. If you want to keep a copy of the old file, you can rename it to something else or move it to a different location.
rune.jessen1@icloud.com
like

I'm sorry, I'm not sure what you mean. Can you please provide more context or clarify your question?
rune.jessen1@icloud.com
like what

I apologize, I may have missed your previous message. Could you please clarify what you are referring to?
